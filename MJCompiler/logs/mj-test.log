INFO  14:30:10,380 - Compiling source file: C:\Users\stefc\Fakultet_lokal\PP1\pp1lab.templateAST\workspace\MJCompiler\test\program2.mj
INFO  14:30:10,487 - #2 program
INFO  14:30:10,488 - #30 MJProgram
INFO  14:30:10,488 - #26 const
INFO  14:30:10,489 - #30 int
INFO  14:30:10,489 - #30 cnst
INFO  14:30:10,490 - #3 =
INFO  14:30:10,490 - #27 9
INFO  14:30:10,490 - #10 ;
INFO  14:30:10,491 - #30 int
INFO  14:30:10,491 - #30 x
INFO  14:30:10,492 - #10 ;
INFO  14:30:10,493 - #30 int
INFO  14:30:10,493 - #30 y
INFO  14:30:10,493 - #11 ,
INFO  14:30:10,493 - #30 z
INFO  14:30:10,493 - #4 [
INFO  14:30:10,493 - #5 ]
INFO  14:30:10,493 - #10 ;
INFO  14:30:10,493 - #46 class
INFO  14:30:10,494 - #30 B
INFO  14:30:10,494 - #6 {
INFO  14:30:10,495 - #30 int
INFO  14:30:10,496 - #30 num
INFO  14:30:10,497 - #10 ;
INFO  14:30:10,497 - #6 {
INFO  14:30:10,497 - #30 int
INFO  14:30:10,498 - #30 m
INFO  14:30:10,498 - #8 (
INFO  14:30:10,498 - #30 int
INFO  14:30:10,498 - #30 par
INFO  14:30:10,498 - #9 )
INFO  14:30:10,498 - #6 {
INFO  14:30:10,498 - #25 return
INFO  14:30:10,498 - #30 par
INFO  14:30:10,498 - #10 ;
INFO  14:30:10,499 - #7 }
INFO  14:30:10,499 - #7 }
INFO  14:30:10,499 - #7 }
INFO  14:30:10,499 - #46 class
INFO  14:30:10,500 - #30 C
INFO  14:30:10,500 - #47 extends
INFO  14:30:10,500 - #30 B
INFO  14:30:10,500 - #6 {
INFO  14:30:10,500 - #6 {
INFO  14:30:10,500 - #30 C
INFO  14:30:10,500 - #8 (
INFO  14:30:10,500 - #30 int
INFO  14:30:10,500 - #30 number
INFO  14:30:10,501 - #9 )
INFO  14:30:10,501 - #6 {
INFO  14:30:10,501 - #30 this
INFO  14:30:10,501 - #12 .
INFO  14:30:10,501 - #30 num
INFO  14:30:10,501 - #3 =
INFO  14:30:10,501 - #30 number
INFO  14:30:10,501 - #10 ;
INFO  14:30:10,501 - #7 }
INFO  14:30:10,501 - #30 int
INFO  14:30:10,502 - #30 m
INFO  14:30:10,502 - #8 (
INFO  14:30:10,502 - #30 int
INFO  14:30:10,502 - #30 par
INFO  14:30:10,502 - #9 )
INFO  14:30:10,502 - #6 {
INFO  14:30:10,502 - #25 return
INFO  14:30:10,502 - #30 num
INFO  14:30:10,502 - #35 *
INFO  14:30:10,502 - #30 par
INFO  14:30:10,504 - #10 ;
INFO  14:30:10,504 - #7 }
INFO  14:30:10,504 - #7 }
INFO  14:30:10,504 - #7 }
INFO  14:30:10,504 - #6 {
INFO  14:30:10,504 - #30 int
INFO  14:30:10,504 - #30 k
INFO  14:30:10,504 - #8 (
INFO  14:30:10,504 - #9 )
INFO  14:30:10,505 - #30 int
INFO  14:30:10,505 - #30 c
INFO  14:30:10,505 - #10 ;
INFO  14:30:10,505 - #6 {
INFO  14:30:10,505 - #30 c
INFO  14:30:10,505 - #3 =
INFO  14:30:10,505 - #27 1
INFO  14:30:10,505 - #10 ;
INFO  14:30:10,506 - #25 return
INFO  14:30:10,506 - #30 c
INFO  14:30:10,506 - #31 +
INFO  14:30:10,506 - #27 2
INFO  14:30:10,507 - #10 ;
INFO  14:30:10,507 - #7 }
INFO  14:30:10,507 - #30 int
INFO  14:30:10,508 - #30 g
INFO  14:30:10,508 - #8 (
INFO  14:30:10,508 - #30 int
INFO  14:30:10,508 - #30 op
INFO  14:30:10,508 - #11 ,
INFO  14:30:10,508 - #30 int
INFO  14:30:10,508 - #30 mul
INFO  14:30:10,508 - #9 )
INFO  14:30:10,508 - #6 {
INFO  14:30:10,508 - #25 return
INFO  14:30:10,508 - #30 op
INFO  14:30:10,508 - #35 *
INFO  14:30:10,509 - #30 mul
INFO  14:30:10,509 - #10 ;
INFO  14:30:10,509 - #7 }
INFO  14:30:10,509 - #30 int
INFO  14:30:10,509 - #30 main
INFO  14:30:10,509 - #8 (
INFO  14:30:10,509 - #9 )
INFO  14:30:10,509 - #30 B
INFO  14:30:10,509 - #30 obj_c
INFO  14:30:10,509 - #10 ;
INFO  14:30:10,509 - #30 bool
INFO  14:30:10,509 - #30 b
INFO  14:30:10,509 - #10 ;
INFO  14:30:10,509 - #6 {
INFO  14:30:10,509 - #30 x
INFO  14:30:10,509 - #3 =
INFO  14:30:10,510 - #27 0
INFO  14:30:10,510 - #10 ;
INFO  14:30:10,510 - #30 y
INFO  14:30:10,510 - #3 =
INFO  14:30:10,510 - #27 0
INFO  14:30:10,510 - #10 ;
INFO  14:30:10,510 - #30 obj_c
INFO  14:30:10,510 - #3 =
INFO  14:30:10,510 - #17 new
INFO  14:30:10,510 - #30 C
INFO  14:30:10,510 - #8 (
INFO  14:30:10,512 - #27 4
INFO  14:30:10,512 - #9 )
INFO  14:30:10,513 - #10 ;
INFO  14:30:10,513 - #15 print
INFO  14:30:10,513 - #8 (
INFO  14:30:10,513 - #30 obj_c
INFO  14:30:10,514 - #12 .
INFO  14:30:10,514 - #30 num
INFO  14:30:10,514 - #9 )
INFO  14:30:10,514 - #10 ;
INFO  14:30:10,514 - #30 x
INFO  14:30:10,514 - #3 =
INFO  14:30:10,514 - #30 obj_c
INFO  14:30:10,514 - #12 .
INFO  14:30:10,514 - #30 m
INFO  14:30:10,514 - #8 (
INFO  14:30:10,514 - #27 4
INFO  14:30:10,515 - #9 )
INFO  14:30:10,515 - #10 ;
INFO  14:30:10,516 - #15 print
INFO  14:30:10,516 - #8 (
INFO  14:30:10,516 - #30 x
INFO  14:30:10,516 - #9 )
INFO  14:30:10,516 - #10 ;
INFO  14:30:10,516 - #21 if
INFO  14:30:10,516 - #8 (
INFO  14:30:10,517 - #30 obj_c
INFO  14:30:10,517 - #40 >
INFO  14:30:10,517 - #30 obj_c
INFO  14:30:10,519 - #9 )
INFO  14:30:10,519 - #6 {
INFO  14:30:10,519 - #15 print
INFO  14:30:10,519 - #8 (
INFO  14:30:10,519 - #28 y
INFO  14:30:10,519 - #9 )
INFO  14:30:10,519 - #10 ;
INFO  14:30:10,520 - #7 }
INFO  14:30:10,520 - #30 b
INFO  14:30:10,521 - #3 =
INFO  14:30:10,521 - #29 false
INFO  14:30:10,521 - #10 ;
INFO  14:30:10,521 - #15 print
INFO  14:30:10,521 - #8 (
INFO  14:30:10,521 - #30 b
INFO  14:30:10,521 - #9 )
INFO  14:30:10,521 - #10 ;
INFO  14:30:10,521 - #25 return
INFO  14:30:10,521 - #27 0
INFO  14:30:10,521 - #10 ;
INFO  14:30:10,521 - #7 }
INFO  14:30:10,521 - #7 }
INFO  14:30:10,530 - Definisana const na liniji 2
INFO  14:30:10,530 - Definicija promenljive x na liniji 2
INFO  14:30:10,530 - Definicija promenljive y na liniji 2
INFO  14:30:10,530 - Definicija niz promenljive z na liniji 2
INFO  14:30:10,530 - Definicija polja num na liniji 5
INFO  14:30:10,530 - Dodat je podrazumevani konstruktor za klasu B na liniji 4
INFO  14:30:10,531 - Dodat je podrazumevani konstruktor za klasu C na liniji 13
INFO  14:30:10,531 - Definicija promenljive c na liniji 28
INFO  14:30:10,531 - Definicija promenljive obj_c na liniji 37
INFO  14:30:10,531 - Definicija promenljive b na liniji 37
ERROR 14:30:10,533 - Semanticka greska: objekti klasa i nizovi mogu da se porede samo sa operatorima '==' ili '!=' na liniji 48
INFO  14:30:10,534 - ===============================
INFO  14:30:10,536 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgListClass(
    ProgListClass(
      ProgListVar(
        ProgListVar(
          ProgListConst(
            NoProgDeclList(
            ) [NoProgDeclList]
            ConstDeclarationStart(
              Type(
               int
              ) [Type]
              BaseConstDeclarationList(
                ConstDeclaration(
                 cnst
                  ConstIntType(
                   9
                  ) [ConstIntType]
                ) [ConstDeclaration]
              ) [BaseConstDeclarationList]
            ) [ConstDeclarationStart]
          ) [ProgListConst]
          ProgVarDeclarationStart(
            ProgVarType(
              Type(
               int
              ) [Type]
            ) [ProgVarType]
            BaseProgVarDeclaration(
              ProgVar(
                VarNameSingle(
                 x
                ) [VarNameSingle]
              ) [ProgVar]
            ) [BaseProgVarDeclaration]
          ) [ProgVarDeclarationStart]
        ) [ProgListVar]
        ProgVarDeclarationStart(
          ProgVarType(
            Type(
             int
            ) [Type]
          ) [ProgVarType]
          ProgVarListRec(
            ProgVar(
              VarNameSingle(
               y
              ) [VarNameSingle]
            ) [ProgVar]
            BaseProgVarDeclaration(
              ProgVar(
                VarNameArray(
                 z
                ) [VarNameArray]
              ) [ProgVar]
            ) [BaseProgVarDeclaration]
          ) [ProgVarListRec]
        ) [ProgVarDeclarationStart]
      ) [ProgListVar]
      ClassDeclaration(
        ClassName(
         B
        ) [ClassName]
        NoClassExtends(
        ) [NoClassExtends]
        VarDeclarations(
          NoVarDecl(
          ) [NoVarDecl]
          VarDeclarationStart(
            Type(
             int
            ) [Type]
            BaseVarDeclarationList(
              VarNameSingle(
               num
              ) [VarNameSingle]
            ) [BaseVarDeclarationList]
          ) [VarDeclarationStart]
        ) [VarDeclarations]
        ClassMethodDecl(
          ConstructorDeclarationEmpty(
          ) [ConstructorDeclarationEmpty]
          MethodDeclListExists(
            MethodDeclSingle(
              MethodDecl(
                MethodTypeName(
                  Type(
                   int
                  ) [Type]
                 m
                ) [MethodTypeName]
                OptFormalParams(
                  SingleFormalParamDecl(
                    FormalParamDeclSingle(
                      Type(
                       int
                      ) [Type]
                     par
                    ) [FormalParamDeclSingle]
                  ) [SingleFormalParamDecl]
                ) [OptFormalParams]
                NoVarDecl(
                ) [NoVarDecl]
                OptStatementList(
                  StatementSingle(
                    ReturnExprStatement(
                      TermExpr(
                        FactorTerm(
                          DesignatorFactor(
                            DesignatorSingle(
                             par
                            ) [DesignatorSingle]
                          ) [DesignatorFactor]
                        ) [FactorTerm]
                      ) [TermExpr]
                    ) [ReturnExprStatement]
                  ) [StatementSingle]
                ) [OptStatementList]
              ) [MethodDecl]
            ) [MethodDeclSingle]
          ) [MethodDeclListExists]
        ) [ClassMethodDecl]
      ) [ClassDeclaration]
    ) [ProgListClass]
    ClassDeclaration(
      ClassName(
       C
      ) [ClassName]
      ClassExtends(
        SuperClassIdent(
         B
        ) [SuperClassIdent]
      ) [ClassExtends]
      NoVarDecl(
      ) [NoVarDecl]
      ClassMethodDecl(
        ConstructorDeclarationList(
          ConstructorDeclarationEmpty(
          ) [ConstructorDeclarationEmpty]
          ConstructorDeclarationInst(
            ConstructorDeclarationStart(
             C
            ) [ConstructorDeclarationStart]
            OptFormalParams(
              SingleFormalParamDecl(
                FormalParamDeclSingle(
                  Type(
                   int
                  ) [Type]
                 number
                ) [FormalParamDeclSingle]
              ) [SingleFormalParamDecl]
            ) [OptFormalParams]
            NoVarDecl(
            ) [NoVarDecl]
            OptStatementList(
              StatementSingle(
                DesignatorStatementStmt(
                  AssignmentStatement(
                    AssignmentExpr(
                      DesignatorField(
                        DesignatorSingle(
                         this
                        ) [DesignatorSingle]
                       num
                      ) [DesignatorField]
                      TermExpr(
                        FactorTerm(
                          DesignatorFactor(
                            DesignatorSingle(
                             number
                            ) [DesignatorSingle]
                          ) [DesignatorFactor]
                        ) [FactorTerm]
                      ) [TermExpr]
                    ) [AssignmentExpr]
                  ) [AssignmentStatement]
                ) [DesignatorStatementStmt]
              ) [StatementSingle]
            ) [OptStatementList]
          ) [ConstructorDeclarationInst]
        ) [ConstructorDeclarationList]
        MethodDeclListExists(
          MethodDeclSingle(
            MethodDecl(
              MethodTypeName(
                Type(
                 int
                ) [Type]
               m
              ) [MethodTypeName]
              OptFormalParams(
                SingleFormalParamDecl(
                  FormalParamDeclSingle(
                    Type(
                     int
                    ) [Type]
                   par
                  ) [FormalParamDeclSingle]
                ) [SingleFormalParamDecl]
              ) [OptFormalParams]
              NoVarDecl(
              ) [NoVarDecl]
              OptStatementList(
                StatementSingle(
                  ReturnExprStatement(
                    TermExpr(
                      MulTerm(
                        FactorTerm(
                          DesignatorFactor(
                            DesignatorSingle(
                             num
                            ) [DesignatorSingle]
                          ) [DesignatorFactor]
                        ) [FactorTerm]
                        MultiplyOp(
                        ) [MultiplyOp]
                        DesignatorFactor(
                          DesignatorSingle(
                           par
                          ) [DesignatorSingle]
                        ) [DesignatorFactor]
                      ) [MulTerm]
                    ) [TermExpr]
                  ) [ReturnExprStatement]
                ) [StatementSingle]
              ) [OptStatementList]
            ) [MethodDecl]
          ) [MethodDeclSingle]
        ) [MethodDeclListExists]
      ) [ClassMethodDecl]
    ) [ClassDeclaration]
  ) [ProgListClass]
  MethodDeclListExists(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclSingle(
          MethodDecl(
            MethodTypeName(
              Type(
               int
              ) [Type]
             k
            ) [MethodTypeName]
            NoFormalParam(
            ) [NoFormalParam]
            VarDeclarations(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclarationStart(
                Type(
                 int
                ) [Type]
                BaseVarDeclarationList(
                  VarNameSingle(
                   c
                  ) [VarNameSingle]
                ) [BaseVarDeclarationList]
              ) [VarDeclarationStart]
            ) [VarDeclarations]
            OptStatementList(
              Statements(
                StatementSingle(
                  DesignatorStatementStmt(
                    AssignmentStatement(
                      AssignmentExpr(
                        DesignatorSingle(
                         c
                        ) [DesignatorSingle]
                        TermExpr(
                          FactorTerm(
                            ConstFactor(
                              ConstIntType(
                               1
                              ) [ConstIntType]
                            ) [ConstFactor]
                          ) [FactorTerm]
                        ) [TermExpr]
                      ) [AssignmentExpr]
                    ) [AssignmentStatement]
                  ) [DesignatorStatementStmt]
                ) [StatementSingle]
                ReturnExprStatement(
                  AddExpr(
                    TermExpr(
                      FactorTerm(
                        DesignatorFactor(
                          DesignatorSingle(
                           c
                          ) [DesignatorSingle]
                        ) [DesignatorFactor]
                      ) [FactorTerm]
                    ) [TermExpr]
                    PlusOp(
                    ) [PlusOp]
                    FactorTerm(
                      ConstFactor(
                        ConstIntType(
                         2
                        ) [ConstIntType]
                      ) [ConstFactor]
                    ) [FactorTerm]
                  ) [AddExpr]
                ) [ReturnExprStatement]
              ) [Statements]
            ) [OptStatementList]
          ) [MethodDecl]
        ) [MethodDeclSingle]
        MethodDecl(
          MethodTypeName(
            Type(
             int
            ) [Type]
           g
          ) [MethodTypeName]
          OptFormalParams(
            FormalParamDecls(
              FormalParamDeclSingle(
                Type(
                 int
                ) [Type]
               op
              ) [FormalParamDeclSingle]
              SingleFormalParamDecl(
                FormalParamDeclSingle(
                  Type(
                   int
                  ) [Type]
                 mul
                ) [FormalParamDeclSingle]
              ) [SingleFormalParamDecl]
            ) [FormalParamDecls]
          ) [OptFormalParams]
          NoVarDecl(
          ) [NoVarDecl]
          OptStatementList(
            StatementSingle(
              ReturnExprStatement(
                TermExpr(
                  MulTerm(
                    FactorTerm(
                      DesignatorFactor(
                        DesignatorSingle(
                         op
                        ) [DesignatorSingle]
                      ) [DesignatorFactor]
                    ) [FactorTerm]
                    MultiplyOp(
                    ) [MultiplyOp]
                    DesignatorFactor(
                      DesignatorSingle(
                       mul
                      ) [DesignatorSingle]
                    ) [DesignatorFactor]
                  ) [MulTerm]
                ) [TermExpr]
              ) [ReturnExprStatement]
            ) [StatementSingle]
          ) [OptStatementList]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        MethodTypeName(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeName]
        NoFormalParam(
        ) [NoFormalParam]
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            VarDeclarationStart(
              Type(
               B
              ) [Type]
              BaseVarDeclarationList(
                VarNameSingle(
                 obj_c
                ) [VarNameSingle]
              ) [BaseVarDeclarationList]
            ) [VarDeclarationStart]
          ) [VarDeclarations]
          VarDeclarationStart(
            Type(
             bool
            ) [Type]
            BaseVarDeclarationList(
              VarNameSingle(
               b
              ) [VarNameSingle]
            ) [BaseVarDeclarationList]
          ) [VarDeclarationStart]
        ) [VarDeclarations]
        OptStatementList(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            StatementSingle(
                              DesignatorStatementStmt(
                                AssignmentStatement(
                                  AssignmentExpr(
                                    DesignatorSingle(
                                     x
                                    ) [DesignatorSingle]
                                    TermExpr(
                                      FactorTerm(
                                        ConstFactor(
                                          ConstIntType(
                                           0
                                          ) [ConstIntType]
                                        ) [ConstFactor]
                                      ) [FactorTerm]
                                    ) [TermExpr]
                                  ) [AssignmentExpr]
                                ) [AssignmentStatement]
                              ) [DesignatorStatementStmt]
                            ) [StatementSingle]
                            DesignatorStatementStmt(
                              AssignmentStatement(
                                AssignmentExpr(
                                  DesignatorSingle(
                                   y
                                  ) [DesignatorSingle]
                                  TermExpr(
                                    FactorTerm(
                                      ConstFactor(
                                        ConstIntType(
                                         0
                                        ) [ConstIntType]
                                      ) [ConstFactor]
                                    ) [FactorTerm]
                                  ) [TermExpr]
                                ) [AssignmentExpr]
                              ) [AssignmentStatement]
                            ) [DesignatorStatementStmt]
                          ) [Statements]
                          DesignatorStatementStmt(
                            AssignmentStatement(
                              AssignmentExpr(
                                DesignatorSingle(
                                 obj_c
                                ) [DesignatorSingle]
                                TermExpr(
                                  FactorTerm(
                                    OperatorNewClass(
                                      ClassNewType(
                                        Type(
                                         C
                                        ) [Type]
                                      ) [ClassNewType]
                                      OptMethodActualParams(
                                        ActualParamSingle(
                                          ActualParameter(
                                            TermExpr(
                                              FactorTerm(
                                                ConstFactor(
                                                  ConstIntType(
                                                   4
                                                  ) [ConstIntType]
                                                ) [ConstFactor]
                                              ) [FactorTerm]
                                            ) [TermExpr]
                                          ) [ActualParameter]
                                        ) [ActualParamSingle]
                                      ) [OptMethodActualParams]
                                    ) [OperatorNewClass]
                                  ) [FactorTerm]
                                ) [TermExpr]
                              ) [AssignmentExpr]
                            ) [AssignmentStatement]
                          ) [DesignatorStatementStmt]
                        ) [Statements]
                        PrintStatement(
                          TermExpr(
                            FactorTerm(
                              DesignatorFactor(
                                DesignatorField(
                                  DesignatorSingle(
                                   obj_c
                                  ) [DesignatorSingle]
                                 num
                                ) [DesignatorField]
                              ) [DesignatorFactor]
                            ) [FactorTerm]
                          ) [TermExpr]
                        ) [PrintStatement]
                      ) [Statements]
                      DesignatorStatementStmt(
                        AssignmentStatement(
                          AssignmentExpr(
                            DesignatorSingle(
                             x
                            ) [DesignatorSingle]
                            TermExpr(
                              FactorTerm(
                                FactorFuncCall(
                                  FunctionCall(
                                    FunctionName(
                                      DesignatorField(
                                        DesignatorSingle(
                                         obj_c
                                        ) [DesignatorSingle]
                                       m
                                      ) [DesignatorField]
                                    ) [FunctionName]
                                    OptMethodActualParams(
                                      ActualParamSingle(
                                        ActualParameter(
                                          TermExpr(
                                            FactorTerm(
                                              ConstFactor(
                                                ConstIntType(
                                                 4
                                                ) [ConstIntType]
                                              ) [ConstFactor]
                                            ) [FactorTerm]
                                          ) [TermExpr]
                                        ) [ActualParameter]
                                      ) [ActualParamSingle]
                                    ) [OptMethodActualParams]
                                  ) [FunctionCall]
                                ) [FactorFuncCall]
                              ) [FactorTerm]
                            ) [TermExpr]
                          ) [AssignmentExpr]
                        ) [AssignmentStatement]
                      ) [DesignatorStatementStmt]
                    ) [Statements]
                    PrintStatement(
                      TermExpr(
                        FactorTerm(
                          DesignatorFactor(
                            DesignatorSingle(
                             x
                            ) [DesignatorSingle]
                          ) [DesignatorFactor]
                        ) [FactorTerm]
                      ) [TermExpr]
                    ) [PrintStatement]
                  ) [Statements]
                  IfStatement(
                    IfConstruct(
                      IfKeyWord(
                      ) [IfKeyWord]
                      ControlConditionValid(
                        ConditionSingle(
                          ConditionTermSingle(
                            ConditionFactorRel(
                              TermExpr(
                                FactorTerm(
                                  DesignatorFactor(
                                    DesignatorSingle(
                                     obj_c
                                    ) [DesignatorSingle]
                                  ) [DesignatorFactor]
                                ) [FactorTerm]
                              ) [TermExpr]
                              GreaterOp(
                              ) [GreaterOp]
                              TermExpr(
                                FactorTerm(
                                  DesignatorFactor(
                                    DesignatorSingle(
                                     obj_c
                                    ) [DesignatorSingle]
                                  ) [DesignatorFactor]
                                ) [FactorTerm]
                              ) [TermExpr]
                            ) [ConditionFactorRel]
                          ) [ConditionTermSingle]
                        ) [ConditionSingle]
                      ) [ControlConditionValid]
                      BlockStatement(
                        OptStatementList(
                          StatementSingle(
                            PrintStatement(
                              TermExpr(
                                FactorTerm(
                                  ConstFactor(
                                    ConstCharType(
                                     y
                                    ) [ConstCharType]
                                  ) [ConstFactor]
                                ) [FactorTerm]
                              ) [TermExpr]
                            ) [PrintStatement]
                          ) [StatementSingle]
                        ) [OptStatementList]
                      ) [BlockStatement]
                    ) [IfConstruct]
                  ) [IfStatement]
                ) [Statements]
                DesignatorStatementStmt(
                  AssignmentStatement(
                    AssignmentExpr(
                      DesignatorSingle(
                       b
                      ) [DesignatorSingle]
                      TermExpr(
                        FactorTerm(
                          ConstFactor(
                            ConstBoolType(
                             false
                            ) [ConstBoolType]
                          ) [ConstFactor]
                        ) [FactorTerm]
                      ) [TermExpr]
                    ) [AssignmentExpr]
                  ) [AssignmentStatement]
                ) [DesignatorStatementStmt]
              ) [Statements]
              PrintStatement(
                TermExpr(
                  FactorTerm(
                    DesignatorFactor(
                      DesignatorSingle(
                       b
                      ) [DesignatorSingle]
                    ) [DesignatorFactor]
                  ) [FactorTerm]
                ) [TermExpr]
              ) [PrintStatement]
            ) [Statements]
            ReturnExprStatement(
              TermExpr(
                FactorTerm(
                  ConstFactor(
                    ConstIntType(
                     0
                    ) [ConstIntType]
                  ) [ConstFactor]
                ) [FactorTerm]
              ) [TermExpr]
            ) [ReturnExprStatement]
          ) [Statements]
        ) [OptStatementList]
      ) [MethodDecl]
    ) [MethodDeclarations]
  ) [MethodDeclListExists]
) [Program]
INFO  14:30:10,540 - ===============================
ERROR 14:30:10,540 - Parsiranje NIJE uspesno zavrseno!
